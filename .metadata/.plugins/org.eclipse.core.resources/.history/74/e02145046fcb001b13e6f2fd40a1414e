package piateam.footballclubs.api.controllers;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.validation.FieldError;
import org.springframework.http.HttpStatus;
import org.springframework.web.bind.MethodArgumentNotValidException;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

import piateam.footballclubs.business.abstracts.FootballerService;
import piateam.footballclubs.core.utilities.results.DataResult;
import piateam.footballclubs.core.utilities.results.ErrorDataResult;
import piateam.footballclubs.core.utilities.results.Result;
import piateam.footballclubs.entities.concretes.Footballer;
import piateam.footballclubs.entities.dtos.FootballerDto;
import piateam.footballclubs.entities.dtos.FootballerInputDto;

@CrossOrigin
@RestController
@RequestMapping("api/footballers")
public class FootballersController {

	FootballerService footballerService;
	@Autowired
	public FootballersController(FootballerService footballerService) {
		super();
		this.footballerService = footballerService;
	}
	
	@GetMapping("/getall")
	public DataResult<List<FootballerDto>> getAll(){
		return this.footballerService.getAll();
	}
	
	@PostMapping("/add")
	public Result add(@Valid @RequestBody FootballerInputDto footballerInputDto) {
		return this.footballerService.add(footballerInputDto);
	}
	
	@GetMapping("/getByFootballTeamId")
	public DataResult<List<FootballerDto>> getByFootballTeamId(@RequestParam int id){
		return this.footballerService.getByFootballTeamId(id);
	}
	
	@DeleteMapping("/delete")
	public Result delete(@RequestParam Footballer footballer) {
		return this.footballerService.delete(footballer);
	}
	
	@PutMapping("/update")
	public Result update(@RequestBody Footballer footballer) {
		return this.footballerService.update(footballer);
	}
	
	
	@ExceptionHandler(MethodArgumentNotValidException.class)
	@ResponseStatus(HttpStatus.BAD_REQUEST)
	public ErrorDataResult<Object> handleValidationException(MethodArgumentNotValidException exceptions){
		Map<String, String> validationErrors=new HashMap<String, String>();
		for (FieldError fieldError :exceptions.getBindingResult().getFieldErrors()) {
			validationErrors.put(fieldError.getField(), fieldError.getDefaultMessage());
		}
		
		ErrorDataResult<Object> errors=new ErrorDataResult<Object>(validationErrors,"Doğrulama hataları");
		return errors;
	}
}
